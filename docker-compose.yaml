services:
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend
  # web:
  #   build: .
  #   container_name: web
  #   command: gunicorn --bind 0.0.0.0:8000 --reload "app:create_app()"
  #   volumes:
  #     - .:/app
  #     - ./migrations:/app/migrations
  #   environment:
  #     FLASK_APP: app/__init__.py
  #   depends_on:
  #     - db
  #   networks:
  #     - backend
  web:
    build: .
    container_name: web
    # command: >
    #   sh -c "flask db init && flask db migrate -m 'Initial' && flask db upgrade && gunicorn --bind 0.0.0.0:8000 --reload 'app:create_app()'"
    command: gunicorn --bind 0.0.0.0:8000 --reload 'app:create_app()'

    volumes:
      - .:/app
      - ./migrations:/app/migrations # –í–∞–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
    environment:
      FLASK_APP: "app:create_app()" # üî¥ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!
      FLASK_ENV: "development" # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
      DATABASE_URL: "postgresql://myuser:mypassword@db/mydb" # –î–æ–±–∞–≤–ª–µ–Ω–æ
    depends_on:
      - db
    networks:
      - backend

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - backend

volumes:
  postgres_data:


networks:
  backend:
    driver: bridge
